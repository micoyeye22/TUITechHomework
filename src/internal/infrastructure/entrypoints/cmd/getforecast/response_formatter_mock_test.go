// Code generated by mockery v2.14.0. DO NOT EDIT.

package getforecast

import (
	models "musement/src/internal/core/domain/entities"

	mock "github.com/stretchr/testify/mock"
)

// MockResponseFormatter is an autogenerated mock type for the responseFormatter type
type MockResponseFormatter struct {
	mock.Mock
}

// FormatCityForcasted provides a mock function with given fields: cityForecasted
func (_m *MockResponseFormatter) FormatCityForcasted(cityForecasted models.CityForecasted) string {
	ret := _m.Called(cityForecasted)

	var r0 string
	if rf, ok := ret.Get(0).(func(models.CityForecasted) string); ok {
		r0 = rf(cityForecasted)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

type mockConstructorTestingTNewMockResponseFormatter interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockResponseFormatter creates a new instance of MockResponseFormatter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockResponseFormatter(t mockConstructorTestingTNewMockResponseFormatter) *MockResponseFormatter {
	mock := &MockResponseFormatter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
