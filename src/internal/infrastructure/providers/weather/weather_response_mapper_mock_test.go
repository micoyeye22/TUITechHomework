// Code generated by mockery v2.14.0. DO NOT EDIT.

package weather

import (
	contracts "musement/src/internal/core/contracts"

	mock "github.com/stretchr/testify/mock"

	response "musement/src/internal/infrastructure/providers/weather/internal/response"
)

// MockWeatherResponseMapper is an autogenerated mock type for the weatherResponseMapper type
type MockWeatherResponseMapper struct {
	mock.Mock
}

// ToWeatherForecastContract provides a mock function with given fields: weatherAPIResponse
func (_m *MockWeatherResponseMapper) ToWeatherForecastContract(weatherAPIResponse response.WeatherAPIResponse) contracts.WeatherForecast {
	ret := _m.Called(weatherAPIResponse)

	var r0 contracts.WeatherForecast
	if rf, ok := ret.Get(0).(func(response.WeatherAPIResponse) contracts.WeatherForecast); ok {
		r0 = rf(weatherAPIResponse)
	} else {
		r0 = ret.Get(0).(contracts.WeatherForecast)
	}

	return r0
}

type mockConstructorTestingTNewMockWeatherResponseMapper interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockWeatherResponseMapper creates a new instance of MockWeatherResponseMapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockWeatherResponseMapper(t mockConstructorTestingTNewMockWeatherResponseMapper) *MockWeatherResponseMapper {
	mock := &MockWeatherResponseMapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
