// Code generated by mockery v2.14.0. DO NOT EDIT.

package musement

import (
	contracts "musement/src/internal/core/contracts"

	mock "github.com/stretchr/testify/mock"

	response "musement/src/internal/infrastructure/providers/musement/internal/response"
)

// MockMusementResponseMapper is an autogenerated mock type for the musementResponseMapper type
type MockMusementResponseMapper struct {
	mock.Mock
}

// ToCityContract provides a mock function with given fields: responseCity
func (_m *MockMusementResponseMapper) ToCityContract(responseCity response.City) contracts.City {
	ret := _m.Called(responseCity)

	var r0 contracts.City
	if rf, ok := ret.Get(0).(func(response.City) contracts.City); ok {
		r0 = rf(responseCity)
	} else {
		r0 = ret.Get(0).(contracts.City)
	}

	return r0
}

type mockConstructorTestingTNewMockMusementResponseMapper interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockMusementResponseMapper creates a new instance of MockMusementResponseMapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockMusementResponseMapper(t mockConstructorTestingTNewMockMusementResponseMapper) *MockMusementResponseMapper {
	mock := &MockMusementResponseMapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
